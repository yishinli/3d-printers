# config for a AGS7G machine : one RPi3 and four STM32s
# See docs/Config_Reference.md for a description of parameters.

[include mcu.cfg]

# PE[15:0] are reserved port for BluePill
[stepper_x]
step_pin: PB10
dir_pin: !PB5
enable_pin: !PA5 # common to enable of stepper_z
endstop_pin: ^!PB6  # 升降到位
# endstop_pin: tmc2209_stepper_x:virtual_endstop
microsteps: 16
rotation_distance: 8
position_min: -5
position_endstop: -5
position_max: 400
homing_speed: 5.0

[tmc2209 stepper_x]
uart_pin: PB7
uart_address: 1
run_current: 0.45
# diag_pin: ^PB6
# driver_SGTHRS: 120    # for 張大頭60mm步進，數值愈大，觸發停止力量愈小
stealthchop_threshold: 0

#manual_stepper: [manual_stepper work_a]
#manual_stepper: # enable_pin: !b:PA5, common to enable of stepper_y
#manual_stepper: step_pin: b:PB10
#manual_stepper: dir_pin: b:PB5
#manual_stepper: microsteps: 16
#manual_stepper: full_steps_per_rotation: 200
#manual_stepper: rotation_distance: 40
#manual_stepper: velocity: 30
#manual_stepper: #   Set the default velocity (in mm/s) for the stepper. This value
#manual_stepper: #   will be used if a MANUAL_STEPPER command does not specify a SPEED
#manual_stepper: #   parameter. The default is 5mm/s.
#manual_stepper: accel: 900
#manual_stepper: #   Set the default acceleration (in mm/s^2) for the stepper. An
#manual_stepper: #   acceleration of zero will result in no acceleration. This value
#manual_stepper: #   will be used if a MANUAL_STEPPER command does not specify an ACCEL
#manual_stepper: #   parameter. The default is zero.
#manual_stepper: #endstop_pin:^PB0
#manual_stepper: #   Endstop switch detection pin. If specified, then one may perform
#manual_stepper: #   "homing moves" by adding a STOP_ON_ENDSTOP parameter to
#manual_stepper: #   MANUAL_STEPPER movement commands.
#manual_stepper: 
#manual_stepper: [tmc2209 manual_stepper work_a]
#manual_stepper: uart_pin: b:PC13
#manual_stepper: run_current: 0.650
#manual_stepper: stealthchop_threshold: 0

# work_a
[stepper_y]
step_pin: PA6
dir_pin:  !PA7    # 連供實驗平台的步進馬達方向和量產機不同
enable_pin: !PA5
# endstop_pin - agsc3-fixture - connects to di10 switch
# endstop_pin: ^!c:PB8  # 升降到位 (PB8-5V-input for AR210/AR211)
endstop_pin: ^!PA10  # 升降到位 PA10-24V-input (DI_06) for AR211/AR21C,
# endstop_pin: tmc2209_stepper_y:virtual_endstop
microsteps: 16
rotation_distance: 8
position_endstop = 0
position_max: 250
position_min: -250
homing_speed: 10.0
homing_positive_dir: true
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PB7
uart_address: 0
run_current: 0.55
# diag_pin: ^PB9
# driver_SGTHRS: 120    # force for 5mm/s for 張大頭60mm步進，數值愈大，觸發停止力量愈小
stealthchop_threshold: 0

# work_b
[stepper_z]
step_pin: b:PA6
dir_pin:  b:PA7
enable_pin: !b:PA5
# AR210/AR211: endstop_pin: ^!b:PB8  # 升降到位(PB8 for AR210/AR211)
# AR21C: 
endstop_pin: ^!b:PA10  # 升降到位 PA10 (DI_16)
# endstop_pin: tmc2209_stepper_z:virtual_endstop
microsteps: 16
rotation_distance: 8
position_endstop = 0
position_max: 250
position_min: -250
homing_speed: 10.0
homing_positive_dir: true
homing_retract_dist: 0

[tmc2209 stepper_z]
uart_pin: b:PB7
run_current: 0.55
uart_address: 0
# diag_pin: ^b:PB9
# driver_SGTHRS: 105    # force for 5mm/s for 張大頭60mm步進，數值愈大，觸發停止力量愈小
stealthchop_threshold: 0

#ar21.adc: [adc_temperature my_custom_adc]
#ar21.adc: temperature1: 0
#ar21.adc: voltage1: 0
#ar21.adc: temperature2: 3300
#ar21.adc: voltage2: 5
#ar21.adc: 
#ar21.adc: [temperature_sensor ai000]
#ar21.adc: sensor_type: my_custom_adc
#ar21.adc: sensor_pin: PB1     # PB1 as ai_0
#ar21.adc: 
#ar21.adc: [temperature_sensor ai001]
#ar21.adc: sensor_type: my_custom_adc
#ar21.adc: # sensor_pin: PB0     # AR21C: PB0 as ai_1
#ar21.adc: sensor_pin: PC0       # AR211: pseudo pin: PE0 as ai_1
#ar21.adc: 
#ar21.adc: [temperature_sensor ai002]
#ar21.adc: sensor_type: my_custom_adc
#ar21.adc: sensor_pin: b:PB1   # PB1 as ai_0
#ar21.adc: 
#ar21.adc: [temperature_sensor ai003]
#ar21.adc: sensor_type: my_custom_adc
#ar21.adc: # sensor_pin: b:PB0   # AR21C: PB0 as ai_1
#ar21.adc: sensor_pin: b:PC0     # AR211: pseudo pin: PE0 as ai_1

# [mcu  ] mainControl
#zzz.heater_bed: [led do000]     
#zzz.heater_bed: red_pin: !b:PA15    # ZZZ.AR21C.Di7(PA15) for HotBed
#zzz.heater_bed: initial_RED: 0.0    #
[led do001]
red_pin: !PC14
initial_RED: 1.0    # ABB_STOP_O
[led do002]
red_pin: !PC15
initial_RED: 0.0
[led do003]
red_pin: !PA0
initial_RED: 0.0
[led do004]
red_pin: !PA1
initial_RED: 1.0    # LIGHT_O
[led do005]
red_pin: !PA2
initial_RED: 1.0    # RED_O
[led do006]
red_pin: !PA3
initial_RED: 0.0    # YELLOW
[led do007]
red_pin: !PA4
initial_RED: 0.0    # GREEN

# [mcu b] airControl
[led do008]
# red_pin: !b:PB8   # AR21C PB8 is do_0
red_pin: !b:PB0     # AR211 PB0 is do_0
initial_RED: 0.0
[led do009]
red_pin: !b:PC14
initial_RED: 0.0
[led do010]
red_pin: !b:PC15
initial_RED: 0.0
[led do011]
red_pin: !b:PA0
initial_RED: 0.0
[led do012]
red_pin: !b:PA1
initial_RED: 0.0
[led do013]
red_pin: !b:PA2
initial_RED: 0.0
[led do014]
red_pin: !b:PA3
initial_RED: 0.0
[led do015]
red_pin: !b:PA4
initial_RED: 0.0

# # [mcu  ] mainControl
# [din di000]
# din_pin: ^PB12
# [din di001]
# din_pin: ^!PB13
# [din di002]
# din_pin: ^!PB14
# [din di003]
# din_pin: ^!PB15
# [din di004]
# din_pin: ^!PA8
# [din di005]
# din_pin: ^!PA9
# [din di006]
# din_pin: ^!PA10
# [din di007]
# din_pin: ^!PA15
# [din di008]
# din_pin: ^!PB3
# [din di009]
# din_pin: ^!PB4
# 
# # [mcu b] airControl
# [din di010]
# din_pin: ^!b:PB12
# [din di011]
# din_pin: ^!b:PB13
# [din di012]
# din_pin: ^!b:PB14
# [din di013]
# din_pin: ^!b:PB15
# [din di014]
# din_pin: ^!b:PA8
# [din di015]
# din_pin: ^!b:PA9
# [din di016]
# din_pin: ^!b:PA10
# [din di017]
# din_pin: ^!b:PA15
# [din di018]
# din_pin: ^!b:PB3
# [din di019]
# din_pin: ^!b:PB4

# EBB42-v1.2
[heater_bed]
heater_pin: !b:PA15    # ZZZ.AR21C.Di7(PA15) for HeaterBed
sensor_pin: EBBCan: PA3
sensor_type: EPCOS 100K B57560G104F
#control = pid
#pid_kp = 68.958
#pid_ki = 1.846
#pid_kd = 643.899
pwm_cycle_time: 0.100
smooth_time = 1.0
min_temp: 0
max_temp: 110

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

#ebb.e: [extruder]
#ebb.e: step_pin: EBBCan: PD0
#ebb.e: dir_pin: !EBBCan: PD1
#ebb.e: enable_pin: !EBBCan: PD2
#ebb.e: microsteps: 16
#ebb.e: rotation_distance: 33.500
#ebb.e: nozzle_diameter: 0.400
#ebb.e: filament_diameter: 1.750
#ebb.e: heater_pin: EBBCan: PB13
#ebb.e: sensor_type: EPCOS 100K B57560G104F
#ebb.e: sensor_pin: EBBCan: PA3
#ebb.e: control: pid
#ebb.e: pid_Kp: 21.527
#ebb.e: pid_Ki: 1.063
#ebb.e: pid_Kd: 108.982
#ebb.e: min_temp: -150
#ebb.e: max_temp: 250
#ebb.e: 
#ebb.e: # sensor_type:MAX31865
#ebb.e: # sensor_pin: EBBCan: PA4
#ebb.e: # spi_bus: spi1
#ebb.e: # rtd_nominal_r: 100
#ebb.e: # rtd_reference_r: 430
#ebb.e: # rtd_num_of_wires: 2
#ebb.e: 
#ebb.e: [tmc2209 extruder]
#ebb.e: uart_pin: EBBCan: PA15
#ebb.e: run_current: 0.650
#ebb.e: stealthchop_threshold: 999999
#ebb.e: 
#ebb.e: [fan]
#ebb.e: pin: EBBCan: PA0
#ebb.e: 
#ebb.e: [heater_fan hotend_fan]
#ebb.e: pin: EBBCan: PA1
#ebb.e: heater: extruder
#ebb.e: heater_temp: 50.0

#[neopixel hotend_rgb]
#pin: EBBCan:PD3

#[bltouch]
#sensor_pin: ^EBBCan:PB8
#control_pin: EBBCan:PB9

#[filament_switch_sensor switch_sensor]
#switch_pin: EBBCan:PB4

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB3


[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 1500
max_z_velocity: 25
max_z_accel: 125

[idle_timeout]
timeout: 555777

[force_move]
# Enable commands that force potentially unsafe movement
enable_force_move: True

# change filament
[pause_resume]

[idle_timeout]
# "TURN_OFF_HEATERS" and "M84" after idle_timeout
# 72h/3days: 
timeout: 259200

[gcode_macro YINC]
description: move Y +10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Y=0
  G0 Y10 F600

[gcode_macro YDEC]
description: move Y -10mm without homing
gcode:
  SET_KINEMATIC_POSITION Y=50
  G91
  G0 Y-10 F600

[gcode_macro ZINC]
description: Lower the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z10 F600

[gcode_macro ZDEC]
description: Lift the bed 10mm without homing
gcode:
  SET_KINEMATIC_POSITION Z=50
  G91
  G0 Z-10 F600

#[gcode_button di000]
#pin: ^PB12
#press_gcode: M112

[include mainsail.cfg]

# Where can I find doc on STM32f103 ADC channel numbers ?
# https://community.st.com/t5/stm32-mcus-products/where-can-i-find-doc-on-stm32f103-adc-channel-numbers/td-p/336609
# Thank you very much. That indeed was where the information was hidden :-))
# for the sake of future readers, here is what comes out:
# For STM32F103RB (and all chips STM32F103x8 or STM32F103xB)
# 00000 channel 00 of ADC1 and ADC2 ---> PA0
# 00001 channel 01 of ADC1 and ADC2 ---> PA1
# 00010 channel 02 of ADC1 and ADC2 ---> PA2
# 00011 channel 03 of ADC1 and ADC2 ---> PA3
# 00100 channel 04 of ADC1 and ADC2 ---> PA4
# 00101 channel 05 of ADC1 and ADC2 ---> PA5
# 00110 channel 06 of ADC1 and ADC2 ---> PA6
# 00111 channel 07 of ADC1 and ADC2 ---> PA7
# 01000 channel 08 of ADC1 and ADC2 ---> PB0
# 01001 channel 09 of ADC1 and ADC2 ---> PB1
# 01010 channel 10 of ADC1 and ADC2 ---> PC0  => use PC0 as dummy analog input
# 01011 channel 11 of ADC1 and ADC2 ---> PC1
# 01100 channel 12 of ADC1 and ADC2 ---> PC2
# 01101 channel 13 of ADC1 and ADC2 ---> PC3
# 01110 channel 14 of ADC1 and ADC2 ---> PC4
# 01111 channel 15 of ADC1 and ADC2 ---> PC5
# 10000 channel 16 of ADC1          ---> temperature sensor
# 10000 channel 16 of         ADC2 ---> Vss
# 10001 channel 17 of ADC1          ---> temperature sensor
# 10001 channel 17 of         ADC2 ---> Vss
# There is no ADC3.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.393
#*# pid_ki = 2.162
#*# pid_kd = 556.883

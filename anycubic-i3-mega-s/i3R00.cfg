# 
# Klipper configuration file for Anycubic i3 MEGA S
#
# This config file contains settings of all printer pins (steppers, sensors) for Anycubic i3 mega S in the factory configuration 
# Klipper firmware should be compiled for the atmega2560
#
# Config file includes
#  - Original or 2208(2209) rotated by cabel drivers
#  - Mesh bed leveling: BLtouch (3DTouch sensor from Triangelab)
#  - Manual meshed bed levelihttps://cdn.thingiverse.com/assets/32/8c/6d/ab/5b/TriGoRiLLa_PINs.pdfng (commented out)
#  - 'virtual_sdcard' for fast printing without gaps
#  - Beeper through M300 gcode
#  - Pause/Resume through M600 for filament change
#
# Home position is determined by 3DTouch. Z limit switches are not used.
#
# The latest version of the config reference is also available online at:
# https://www.klipper3d.org/Config_Reference.html
# pin_map: arduino is no longer supported, refer to the folloing links for ar* to P* mapping
#	https://github.com/Klipper3d/klipper/blob/master/config/sample-aliases.cfg 
# 	https://www.electronicshub.org/arduino-mega-pinout/
# 	https://cdn.thingiverse.com/assets/32/8c/6d/ab/5b/TriGoRiLLa_PINs.pdf


[stepper_x]
# TMC209
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
endstop_pin: ^!PE5
microsteps: 16
rotation_distance = 40	# <full_steps_per_rotation> * <microsteps> * <step_distance> = 200 * 16 * .0125
position_min = -5.9
position_endstop = -5
position_max = 210
homing_speed = 30
homing_retract_dist = 5
second_homing_speed = 10


[stepper_y]
# TMC209
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
endstop_pin: ^!PL7
microsteps: 16
rotation_distance = 40	# <full_steps_per_rotation> * <microsteps> * <step_distance> = 200 * 16 * .0125
position_min = -10.9
position_endstop = -10
position_max = 210
homing_speed = 50
homing_retract_dist = 5
second_homing_speed = 10


[stepper_z]
# original/A4488
step_pin: PL3
dir_pin: PL1
enable_pin: !PK0
microsteps: 16
rotation_distance = 8	# <full_steps_per_rotation> * <microsteps> * <step_distance> = 200 * 16 * .0025

# uncomment the following 2-lines for manual mesh bed leveling and to enable Z limit switches
# endstop_pin: ^!PD3
# position_endstop = -1

# for 3dtouch. comment for mannual mesh bed leveling
endstop_pin = probe:z_virtual_endstop

position_min = -5.0
position_max = 139
homing_speed = 10
homing_retract_dist = 5
second_homing_speed = 3


[stepper_z1]
# original/A4488
step_pin: PC1
dir_pin: PC3
enable_pin: !PC7
# endstop_pin: ^!PL6
## uncomment above for manual mesh bed leveling and to enable Z limit switches
microsteps: 16
rotation_distance = 8	# <full_steps_per_rotation> * <microsteps> * <step_distance> = 200 * 16 * .0025


[extruder]
# original/A4488
step_pin: PA4
dir_pin: !PA6
enable_pin: !PA2
heater_pin: PB4
sensor_pin: PK5
full_steps_per_rotation: 200
microsteps: 16
# BMG Extruder: 17teeth/48teeth * 7.5(diameter of contact wheel) * 3.14
# rotation_distance: 8.34	# Calibrate - see https://www.klipper3d.org/Rotation_Distance.html, command:25mm, actual:22
rotation_distance: 7.34		# 8.34*22(actual_dist)/25(commanded_dist)
nozzle_diameter = 0.400
filament_diameter = 1.750
sensor_type = ATC Semitec 104GT-2
min_temp = 0
max_temp = 285
max_extrude_only_distance = 150.0
smooth_time = 0.35
min_extrude_temp = 180
pressure_advance = 0.15
max_extrude_cross_section = 150

# pid_kp = 73.793
# pid_ki = 1.941
# pid_kd = 183.568
pid_kp = 63.793
pid_ki = 1.541
pid_kd = 0
control = pid



[heater_fan extruder_fan]
pin: PL5

[heater_bed]
heater_pin: PH5 # heater_pin = ar8, which is different from Chiron (PL4)
sensor_pin: PK6
sensor_type = EPCOS 100K B57560G104F
min_temp = 0
max_temp = 110
smooth_time = 0.5
#pid_kp = 74.292
#pid_ki = 1.353
#pid_kd = 1019.661
#control = pid
pid_kp = 74.292
pid_ki = 1.353
pid_kd = 10
control = pid

[verify_heater heater_bed]
#max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
#check_gain_time:
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

# adjust for personal bed setup, this prevents stock heated bed from issuing
# false positive heating errors due to slow temperature increase
# 1 deg per 5 minutes.
max_error: 300
heating_gain: 1
check_gain_time: 300
hysteresis: 300

[verify_heater extruder]
# 1 deg per minute.
max_error: 300
heating_gain: 1
check_gain_time: 500 


[fan]
pin: PH6
kick_start_time: 1.0


[filament_switch_sensor e0_sensor]
pause_on_runout: True
switch_pin: ^!PD2


[mcu]
serial = /dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0
# restart_method: command

[printer]
kinematics = cartesian
max_velocity = 300
max_accel = 4000
max_accel_to_decel = 1500
max_z_velocity = 7
max_z_accel = 190
square_corner_velocity = 5


## do your own measurement
## https://www.klipper3d.org/Resonance_Compensation.html
#[input_shaper]
#shaper_type_x = 3hump_ei
#shaper_freq_x = 73.0
#shaper_type_y = 3hump_ei
#shaper_freq_y = 60.0


[heater_fan stepstick_fan]
pin: PH4
kick_start_time: 1.0


[bltouch]
sensor_pin = ^PE4	# sensor_pin = ^ar2
control_pin = PE3	# triGorilla 1.1: S1 -> D5  -> ar5  -> PE3
# control_pin = PB5	# triGorilla    : S0 -> D11 -> ar11 -> PB5
x_offset = 36 
y_offset = 10
#z_offset = 0
samples: 3
sample_retract_dist: 5.0
lift_speed: 40
samples_tolerance_retries: 3

[homing_override]
axes: z
set_position_z: 0
gcode:
   G90
   G0 Z5 F600
   G28 X Y
   ##   XY Location of the Z Endstop Switch
   ##   Update X and Y to your values (such as X157, Y305) after going through
   ##   Z Endstop Pin Location Definition step.
   G0 X75 Y100 F3600 

   G28 Z
   G0 Z10 F1800
   Z_TILT_ADJUST
#--------------------------------------------------------------------


[bed_screws]
screw1: 1, 0
screw2: 209, 0
screw3: 209, 210
screw4: 1,210


## bltouch mesh bed leveling
[bed_mesh]
speed = 200
horizontal_move_z = 10
mesh_min = 37,15
mesh_max = 209,210
probe_count = 7,7
fade_start = 1.0
fade_end = 10.0
fade_target = 0
algorithm = bicubic


# enable moving befor homing
## put in terminal:
## SET_KINEMATIC_POSITION X=100 Y=100 Z=100
## then move as usual
[force_move]
enable_force_move: True


[output_pin BEEPER_pin]
pin: PC6 	# pin: ar31
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000


#####################################################################
#   Macros
#####################################################################
[z_tilt]
##  Use Z_TILT_ADJUST to level the bed left to right.
##  z_positions: Location of toolhead
##--------------------------------------------------------------------
## 210mm bed
z_positions:
    360, 145
    -60, 145
points:
    5, 135
    170, 135
##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

[screws_tilt_adjust]
## To run this command, use SCREWS_TILT_CALCULATE
##--------------------------------------------------------------------
# positions for nozzle
screw1: 0,200
screw1_name: rear left screw
screw2: 175,200
screw2_name: rear right screw
screw3: 175,0
screw3_name: front right screw
screw4: 0,0
screw4_name: front left screw
horizontal_move_z: 10
speed: 200
screw_thread: CW-M3
##--------------------------------------------------------------------

[display_status]

# change filament
[pause_resume]

[gcode_macro G29]                    # If moving from marlin to klipper uncomment to mimic G29
gcode:
 BED_MESH_CALIBRATE
 G1 X0 Y0 Z10 F4000

[gcode_macro UNSAFE_Z_UP]
description: Lift Z axis by 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z10 F600
  M84

# [gcode_macro M600]
# gcode:
#     {% set XPOS = params.X|default(50)|float %}
#     {% set YPOS = params.Y|default(0)|float %}
#     {% set ZPOS = params.Z|default(10)|float %}
#     SAVE_GCODE_STATE NAME=M600_state
#     PAUSE
#     G91
#     G1 E-.8 F2700
#     G1 Z{XPOS}
#     G90
#     G1 X{XPOS} Y{YPOS} F3000
#     G91
#     G1 E-150 F1000
#     M300 S299 P200
#     M300 S299 P200
#     M300 S299 P200
#     M300 S299 P200
#     M300 S299 P200
#     RESTORE_GCODE_STATE NAME=M600_state
# 
# [gcode_macro M300]
# gcode:
#     {% set FREQ = params.S|default(1000)|int %}
#     {% set DELAY = params.P|default(100)|int %}
#     SET_PIN PIN=BEEPER_pin VALUE={FREQ}
#     G4 P{DELAY}
#     SET_PIN PIN=BEEPER_pin VALUE=0


[include mainsail.cfg]

## for Measuring Resonances through Raspberry pi
## https://www.klipper3d.org/Measuring_Resonances.html

#[mcu rpi]
#serial = /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    100,100,20  # an example

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.049773, -0.090607, -0.083940, -0.061440, -0.064773, -0.078107, -0.073107
#*# 	-0.011440, -0.038940, -0.038940, -0.011440, -0.011440, -0.028940, -0.032273
#*# 	0.011060, -0.020607, -0.003107, 0.020227, 0.028560, 0.013560, 0.018560
#*# 	0.045227, 0.026060, 0.029393, 0.051060, 0.059393, 0.050227, 0.048560
#*# 	0.045227, 0.015227, 0.026060, 0.050227, 0.065227, 0.059393, 0.061060
#*# 	0.026060, 0.001060, 0.010227, 0.036060, 0.045227, 0.024393, 0.026893
#*# 	-0.018940, -0.062273, -0.053107, -0.034773, -0.023940, -0.036440, -0.048107
#*# tension = 0.2
#*# min_x = 37.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 7
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 208.96
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 73.0
#*# shaper_type_y = 3hump_ei
#*# shaper_freq_y = 60.0
#*#
#*# [bltouch]
#*# z_offset = 3.250
#*#
#*# [bed_mesh 79]
#*# version = 1
#*# points =
#*# 	-0.050263, -0.084430, -0.068596, -0.056096, -0.061096, -0.094430, -0.101930
#*# 	-0.021930, -0.083596, -0.058596, -0.024430, -0.015263, -0.042763, -0.066096
#*# 	0.001404, -0.021096, -0.007763, 0.005570, 0.024737, -0.006096, 0.002237
#*# 	0.034737, -0.038596, -0.014430, 0.045570, 0.051404, 0.030570, 0.011404
#*# 	0.033070, -0.002763, 0.014737, 0.030570, 0.051404, 0.016404, 0.012237
#*# 	0.007237, -0.062763, -0.040263, 0.009737, 0.017237, -0.001096, -0.021930
#*# 	-0.050263, -0.099430, -0.085263, -0.076096, -0.069430, -0.100263, -0.108596
#*# tension = 0.2
#*# mesh_x_pps = 2
#*# algo = bicubic
#*# min_x = 37.0
#*# min_y = 15.0
#*# y_count = 7
#*# mesh_y_pps = 2
#*# x_count = 7
#*# max_x = 208.96
#*# max_y = 210.0
